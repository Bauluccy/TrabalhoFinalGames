/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.Historico;

import Class.Clientes;
import Class.HistoricoDeCompras;
import Class.Jogos;
import Class.Joins;
import Dados.BDClientes;
import Dados.BDHistorico;
import Dados.BDJogos;
import Dados.BDJoins;
import Utilidade.TableModelGames;
import java.sql.SQLException;
import java.sql.Time;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author fifol
 */
public class AlterarHistorico extends javax.swing.JFrame {
//    TelaPrincipal telaprinc;
    CadastrarHistorico cadastroHis;
    
//    int indexID;
//    
//    public AlterarHistorico(TelaPrincipal tabela) {
//        this();
//        this.indexID = Integer.parseInt(tabela.ID_Index);
//    }
    

    ArrayList<HistoricoDeCompras> listaHistorico = new ArrayList<HistoricoDeCompras>();
    ArrayList<Joins> historicoJoin = new ArrayList<Joins>();
    ArrayList<Clientes> listaCliente = new ArrayList<Clientes>();
    ArrayList<Jogos> listaJogos = new ArrayList<Jogos>();
    
    /**
     * Creates new form Alterar
     */
    public AlterarHistorico() {
        initComponents();
//        this.telaprinc = new TelaPrincipal();
        this.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        comboAlterCliente = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        comboAlterJogo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        alterData = new datechooser.beans.DateChooserCombo();
        comboAlterQnt = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        comboAlterPag = new javax.swing.JComboBox<>();
        alterTime = new com.github.lgooddatepicker.components.TimePicker();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        alterTotal = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Cliente");

        comboAlterCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboAlterCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboAlterClienteActionPerformed(evt);
            }
        });

        jLabel2.setText("Game");

        comboAlterJogo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Data");

        jLabel5.setText("Quantidade");

        alterData.setCalendarPreferredSize(new java.awt.Dimension(370, 250));

        comboAlterQnt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Hora");

        jLabel6.setText("Pagamento");

        comboAlterPag.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("Atualizar");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("Cancel");

        jLabel7.setText("Total da compra");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(comboAlterCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(comboAlterJogo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addComponent(alterData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(18, 18, 18)
                            .addComponent(comboAlterPag, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(18, 18, 18)
                            .addComponent(comboAlterQnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(18, 18, 18)
                            .addComponent(alterTime, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(alterTotal)
                        .addGap(67, 67, 67)))
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboAlterCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboAlterJogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(alterData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(alterTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(comboAlterQnt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(comboAlterPag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(alterTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       int indexID = Integer.parseInt(TelaPrincipal.ID_Index);
        
        procuraHistorico(indexID);
        
    }//GEN-LAST:event_formWindowOpened

    private void comboAlterClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboAlterClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboAlterClienteActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        
        HistoricoDeCompras historico = new HistoricoDeCompras();
        BDHistorico bdh = new BDHistorico();
        Date datahora = new Date();
        
        int indexID = Integer.parseInt(TelaPrincipal.ID_Index);
        DateFormat dtoutput = new SimpleDateFormat("dd/MM/yyyy");
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm");
        historico = bdh.procurarJoins(indexID);
        
        if(historico != null){
            historico.setID_Cliente(indexID);
            historico.setID_Cliente(comboAlterCliente.getSelectedIndex() + 1);
            historico.setID_Jogo(comboAlterJogo.getSelectedIndex() + 1);
            try{
                Calendar dataSelecionada = alterData.getSelectedDate();
                java.sql.Date dataSQL = new java.sql.Date(dataSelecionada.getTimeInMillis());
                historico.setData(dataSQL);
            }catch(Exception e){
                e.printStackTrace();
            }
            
            String hora = new SimpleDateFormat("HH:mm").format(datahora);
            historico.setHora(Time.valueOf(alterTime.getTime()));
            historico.setQuantidade(Integer.parseInt(comboAlterQnt.getSelectedItem().toString()));
            historico.setTipoPagamento(comboAlterPag.getSelectedItem().toString());
            historico.setValorTotal(Double.parseDouble(alterTotal.getText()));
            
            bdh.atualizar(historico);
        }else{
                System.out.println("Erro ao atualizar usuario: ");
        }
        
        
        
//        historico = bdh.procurarJoins(indexID);
//        if(historico != null){
//            historico.setID_Historico(indexID);
//            
//            try{
//            
//                historico.setID_Cliente(comboAlterCliente.getSelectedIndex() + 1);
//                historico.setID_Jogo(comboAlterJogo.getSelectedIndex() + 1);
//                
//                
//                Calendar dataSelecionada = alterData.getSelectedDate();
//                java.sql.Date dataSQL = new java.sql.Date(dataSelecionada.getTimeInMillis());
//                historico.setData(dataSQL);
//                
//                
//                SimpleDateFormat format = new SimpleDateFormat("HH:mm");
//                String horaSelecionada = alterTime.getText();
//                Time time = new Time(format.parse(horaSelecionada).getTime());
//                historico.setHora(time);
//                
//                historico.setQuantidade(Integer.parseInt(comboAlterQnt.getSelectedItem().toString()));
//                historico.setTipoPagamento(comboAlterPag.getSelectedItem().toString());
//                
//                double valorJogosTotal;
//                
//                for(int i = comboAlterJogo.getSelectedIndex(); i <= comboAlterJogo.getSelectedIndex(); i++)
//                {                
//                    valorJogosTotal = listaJogos.get(i).getValor() * Double.parseDouble(comboAlterJogo.getSelectedItem().toString());
//                    historico.setValorTotal(valorJogosTotal);
//                }
//                
//                bdh.atualizar(historico);
//                JOptionPane.showMessageDialog(rootPane, "Atualizado com sucesso!!!");
//                dispose();
//                }catch(Exception ex){
//                System.out.println("Erro ao atualizar usuario: " + ex);
//                }
//        }
        
        
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlterarHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlterarHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlterarHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlterarHistorico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlterarHistorico().setVisible(true);
            }
        });
    }
    
    public void procuraHistorico(int index){
        HistoricoDeCompras historico = new HistoricoDeCompras();
        BDHistorico bdh;
        
        carregaCombos();
        
        
//        if (principal.Tabela.getSelectedRow() != -1) {
            try {
                bdh = new BDHistorico();
                historico = bdh.procurarJoins(index);
            }catch (Exception e) {
                System.out.println("Erro ao tentar receber id" + e);
            }
            
            if(historico == null){
                JOptionPane.showMessageDialog(null, "Linha inválida!");
            }else{
                comboAlterCliente.setSelectedIndex(historico.getID_Cliente()-1);
                comboAlterJogo.setSelectedIndex(historico.getID_Jogo()-1);
                
                Date data = historico.getData();
                Calendar cal = Calendar.getInstance();
                cal.setTime(data);
                alterData.setSelectedDate(cal);
                
                //Refatorar esse
                //    VVV
                SimpleDateFormat format = new SimpleDateFormat("HH:mm");
                Time hora = historico.getHora();
                alterTime.setText(hora.toString());
                
                comboAlterQnt.setSelectedIndex(historico.getQuantidade() - 1);
                comboAlterPag.setSelectedItem(historico.getTipoPagamento());
                String totalString = Double.toString(historico.getValorTotal());
//                System.out.println(totalString);
                alterTotal.setText(totalString);
                
            }
    }
    
    public void carregaCombos(){
        
        //START COMBOS
        //Carregar combo Clientes
        try {
            comboAlterCliente.removeAllItems();
            BDClientes BDC = new BDClientes();
            listaCliente = BDC.listar();
        } catch (Exception ex) {
            System.out.println("Erro qualquer" + ex);
        }

        for (int i = 0; i < listaCliente.size(); i++) {
            comboAlterCliente.addItem(listaCliente.get(i).getNomeCliente());
        }  
        
        //Carregar combo Games
        try {
            comboAlterJogo.removeAllItems();
            BDJogos BDJ = new BDJogos();
            listaJogos = BDJ.listar();
        } catch (Exception ex) {
            System.out.println("Erro qualquer" + ex);
        }

        for (int i = 0; i < listaJogos.size(); i++) {
            comboAlterJogo.addItem(listaJogos.get(i).getNomeJogo());
        }
        
        //Carregar combo Qquantidade
        try {
            comboAlterQnt.removeAllItems();
        } catch (Exception ex) {
            System.out.println("Erro qualquer" + ex);
        }

        for (int i = 1; i < 11; i++) {
            comboAlterQnt.addItem(""+i);
        }
        
        
        //Carregar combo Pagamentos
        try {
            comboAlterPag.removeAllItems();
            BDHistorico BDH = new BDHistorico();
            listaHistorico = BDH.listarPagamentos();
            
            
            
        } catch (Exception ex) {
            System.out.println("Erro qualquer" + ex);
        }
        
        
        for (int i = 0; i < listaHistorico.size(); i++) {
            comboAlterPag.addItem(listaHistorico.get(i).getTipoPagamento());
        }  
        //END COMBOS//
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private datechooser.beans.DateChooserCombo alterData;
    private com.github.lgooddatepicker.components.TimePicker alterTime;
    private javax.swing.JTextField alterTotal;
    private javax.swing.JComboBox<String> comboAlterCliente;
    private javax.swing.JComboBox<String> comboAlterJogo;
    private javax.swing.JComboBox<String> comboAlterPag;
    private javax.swing.JComboBox<String> comboAlterQnt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    // End of variables declaration//GEN-END:variables
}
